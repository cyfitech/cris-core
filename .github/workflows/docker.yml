name: Docker

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - master
    paths:
      - ".github/workflows/docker.yml"
      - "docker/**"
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/docker.yml"
      - "docker/**"

jobs:
  docker-debian11:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        GIT_SSH_COMMAND='ssh -vvv' git submodule update --init --jobs 10 --recursive
    - name: Build
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        git submodule foreach --recursive -q pwd                    \
        | cat <(pwd) -                                              \
        | sed -n 's/\(\/cris\-core\)\/*$/\1/p'                      \
        | xargs -I{} find {} -maxdepth 1 -name docker -type d       \
        | sort -u                                                   \
        | head -n1                                                  \
        | xargs -I{} docker build                                   \
            --build-arg BASE_IMAGE="$(cut -d- -f2- <<< "$JOB"       \
                    | sed 's/\([0-9]\)/:\1/'                        \
                    | sed 's/\([0-9][0-9]\)\([0-9]\)/\1\.\2/'       \
                )"                                                  \
            --no-cache                                              \
            --pull                                                  \
            --rm                                                    \
            -t "ghcr.io/$REPO-build-$(cut -d- -f2- <<< "$JOB"):ci"  \
            {}
    - name: Login
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name != 'pull_request' }}
      run: docker login ghcr.io -u "$GITHUB_ACTOR" -p "$GITHUB_TOKEN"
    - name: Push
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      if: ${{ github.event_name != 'pull_request' }}
      run: docker push "ghcr.io/$REPO-build-$(cut -d- -f2- <<< "$JOB"):ci"

  docker-ubuntu2004:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        GIT_SSH_COMMAND='ssh -vvv' git submodule update --init --jobs 10 --recursive
    - name: Build
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        git submodule foreach --recursive -q pwd                    \
        | cat <(pwd) -                                              \
        | sed -n 's/\(\/cris\-core\)\/*$/\1/p'                      \
        | xargs -I{} find {} -maxdepth 1 -name docker -type d       \
        | sort -u                                                   \
        | head -n1                                                  \
        | xargs -I{} docker build                                   \
            --build-arg BASE_IMAGE="$(cut -d- -f2- <<< "$JOB"       \
                    | sed 's/\([0-9]\)/:\1/'                        \
                    | sed 's/\([0-9][0-9]\)\([0-9]\)/\1\.\2/'       \
                )"                                                  \
            --no-cache                                              \
            --pull                                                  \
            --rm                                                    \
            -t "ghcr.io/$REPO-build-$(cut -d- -f2- <<< "$JOB"):ci"  \
            {}
    - name: Login
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name != 'pull_request' }}
      run: docker login ghcr.io -u "$GITHUB_ACTOR" -p "$GITHUB_TOKEN"
    - name: Push
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      if: ${{ github.event_name != 'pull_request' }}
      run: docker push "ghcr.io/$REPO-build-$(cut -d- -f2- <<< "$JOB"):ci"

  docker-ubuntu2204:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        GIT_SSH_COMMAND='ssh -vvv' git submodule update --init --jobs 10 --recursive
    - name: Build
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        git submodule foreach --recursive -q pwd                    \
        | cat <(pwd) -                                              \
        | sed -n 's/\(\/cris\-core\)\/*$/\1/p'                      \
        | xargs -I{} find {} -maxdepth 1 -name docker -type d       \
        | sort -u                                                   \
        | head -n1                                                  \
        | xargs -I{} docker build                                   \
            --build-arg BASE_IMAGE="$(cut -d- -f2- <<< "$JOB"       \
                    | sed 's/\([0-9]\)/:\1/'                        \
                    | sed 's/\([0-9][0-9]\)\([0-9]\)/\1\.\2/'       \
                )"                                                  \
            --no-cache                                              \
            --pull                                                  \
            --rm                                                    \
            -t "ghcr.io/$REPO-build-$(cut -d- -f2- <<< "$JOB"):ci"  \
            {}
    - name: Login
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name != 'pull_request' }}
      run: docker login ghcr.io -u "$GITHUB_ACTOR" -p "$GITHUB_TOKEN"
    - name: Push
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      if: ${{ github.event_name != 'pull_request' }}
      run: docker push "ghcr.io/$REPO-build-$(cut -d- -f2- <<< "$JOB"):ci"
