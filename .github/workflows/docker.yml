name: Docker

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - master
    paths:
      - ".github/workflows/docker.yml"
      - "docker/**"
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/docker.yml"
      - "docker/**"

jobs:
  docker-debian11:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - name: Login to ghcr.io
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Config
      id: docker-build-config
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        echo "::set-output name=TAG::$REPO-build-$(cut -d- -f2- <<< "$JOB")"
        echo "::set-output name=BASE_IMAGE::$(cut -d- -f2- <<< "$JOB"         \
                    | sed 's/\([0-9]\)/:\1/'                                  \
                    | sed 's/\([0-9][0-9]\)\([0-9]\)/\1\.\2/'                 \
             )"
    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        file: "./docker/Dockerfile"
        build-args: "BASE_IMAGE=${{ steps.docker-build-config.outputs.BASE_IMAGE }}"
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ steps.docker-build-config.outputs.TAG }}

  docker-ubuntu2004:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - name: Login to ghcr.io
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Config
      id: docker-build-config
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        echo "::set-output name=TAG::$REPO-build-$(cut -d- -f2- <<< "$JOB")"
        echo "::set-output name=BASE_IMAGE::$(cut -d- -f2- <<< "$JOB"         \
                    | sed 's/\([0-9]\)/:\1/'                                  \
                    | sed 's/\([0-9][0-9]\)\([0-9]\)/\1\.\2/'                 \
             )"
    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        file: "./docker/Dockerfile"
        build-args: "BASE_IMAGE=${{ steps.docker-build-config.outputs.BASE_IMAGE }}"
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ steps.docker-build-config.outputs.TAG }}

  docker-ubuntu2204:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - name: Login to ghcr.io
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Config
      id: docker-build-config
      env:
        JOB:  ${{ github.job }}
        REPO: ${{ github.repository }}
      run: |
        set -e
        echo "::set-output name=TAG::$REPO-build-$(cut -d- -f2- <<< "$JOB")"
        echo "::set-output name=BASE_IMAGE::$(cut -d- -f2- <<< "$JOB"         \
                    | sed 's/\([0-9]\)/:\1/'                                  \
                    | sed 's/\([0-9][0-9]\)\([0-9]\)/\1\.\2/'                 \
             )"
    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        file: "./docker/Dockerfile"
        build-args: "BASE_IMAGE=${{ steps.docker-build-config.outputs.BASE_IMAGE }}"
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ steps.docker-build-config.outputs.TAG }}
