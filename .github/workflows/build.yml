name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  merge_group:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-ubuntu2004:20230512
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-lint-env-setup
      with:
        key: ${{ github.job }}
    - name: Config
      run: export HOME=/root && git config --global --add safe.directory "$(pwd)"
    - name: Check gitignore
      run: |
        set -ex
        export HOME=/root
        ! git --no-pager ls-files -z                            \
        | git --no-pager check-ignore --no-index --stdin -vz    \
        | tr '\0' '\n'                                          \
        | paste -d: - -                                         \
        | paste -d"$(printf '\v')" - -                          \
        | grep -v "$(printf '\v!')"                             \
        | tr '\v' '\t'                                          \
        | grep .
    - name: Run linter
      run: export HOME=/root && make -j lint
    - name: Check diff
      run: export HOME=/root && git --no-pager diff --exit-code

  tidy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-ubuntu2004:20230512
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-lint-env-setup
      with:
        key: ${{ github.job }}
    - name: Config
      run: export HOME=/root && git config --global --add safe.directory "$(pwd)"
    - name: Run tidy
      run: export HOME=/root && make -j tidy -o lint
    - name: Check diff
      run: export HOME=/root && git --no-pager diff --exit-code

  llvm11-debian11:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-debian11:20230512
    env:
      CC: clang-11
      CXX: clang++-11
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    # Offline build with non-existing proxy on 53 (DNS/UDP).
    - name: Build
      run: export HOME=/root && make build HTTPS_PROXY='http://127.0.0.1:53' OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  llvm12-ubuntu2004:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-ubuntu2004:20230512
    env:
      CC: clang-12
      CXX: clang++-12
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build
      run: export HOME=/root && make build OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  llvm13-debian11:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-debian11:20230512
    env:
      CC: clang-13
      CXX: clang++-13
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build
      run: export HOME=/root && make build OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  llvm14-ubuntu2204:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-ubuntu2204:20230512
    env:
      CC: clang-14
      CXX: clang++-14
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build
      run: export HOME=/root && make build OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  gcc10-debian11:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-debian11:20230512
    env:
      CC: gcc-10
      CXX: g++-10
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build
      run: export HOME=/root && make build OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  gcc10-ubuntu2004:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-ubuntu2004:20230512
    env:
      CC: gcc-10
      CXX: g++-10
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build
      run: export HOME=/root && make build OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  gcc11-ubuntu2204:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-ubuntu2204:20230512
    env:
      # Cannot use gcc-12 because of https://github.com/protocolbuffers/protobuf/issues/9948 (requires protobuf v3.21.0 or gcc 12.2)
      # https://github.com/protocolbuffers/protobuf/pull/10118 is needed for upgrading protobuf
      CC: gcc-11
      CXX: g++-11
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build
      run: export HOME=/root && make build OPT="-s"
    - name: Test
      run: export HOME=/root && make test OPT="--test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  asan:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-debian11:20230512
    env:
      CC: clang-13
      CXX: clang++-13
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build and Test
      run: export HOME=/root && make test OPT="--config=asan --test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  ubsan:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-debian11:20230512
    env:
      CC: clang-13
      CXX: clang++-13
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build and Test
      run: export HOME=/root && make test OPT="--config=ubsan --test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup

  tsan:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyfitech/cris-build-debian11:20230512
    env:
      CC: clang-13
      CXX: clang++-13
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/ci-build-env-setup
      with:
        key: ${{ github.job }}
    - name: Build and Test
      run: export HOME=/root && make test OPT="--config=tsan --test_output=all -s"
    - uses: ./.github/actions/ci-env-cleanup
